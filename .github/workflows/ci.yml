name: CI Pipeline

on:
  push:
    branches:
      - main
      - '**/feature/*'
  pull_request:
    branches:
      - main

jobs:
  integration-delivery:
    runs-on: ubuntu-latest
    environment: Test
    container:
      image: node

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Cache Node modules for faster builds
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Run ESLint for code quality checks
      - name: Run ESLint
        run: npx eslint . --ext .js,.jsx,.ts,.tsx

      # Build website
      - name: Build website
        run: npm run build

      # Install TestCafe globally
      - name: Install TestCafe
        run: npm install -g testcafe

      # Update APT and install Chromium dependencies
      - name: Install Chromium and dependencies
        run: |
          apt-get update
          apt-get install -y chromium
          apt-get install -y libnss3 libxss1 libgconf-2-4 libasound2 fonts-liberation libappindicator3-1
          apt-get install -y xvfb  # X virtual framebuffer

      # Run TestCafe tests in headless mode using xvfb-run
      - name: Run tests
        run: xvfb-run --auto-servernum testcafe 'chromium --no-sandbox --disable-dev-shm-usage':headless src/tests/*.js


      # Archive TestCafe reports (updated to v4)
      - name: Archive TestCafe reports
        if: always()
        uses: actions/upload-artifact@v4  # Updated to v4
        with:
          name: testcafe-reports
          path: testcafe-reports/

      # Upload coverage report if using coverage tools like Istanbul (updated to v4)
      - name: Upload Coverage Report
        if: success()
        uses: actions/upload-artifact@v4  # Updated to v4
        with:
          name: coverage-report
          path: coverage/
